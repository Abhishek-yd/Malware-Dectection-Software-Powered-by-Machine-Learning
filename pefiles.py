import pefile

#all the header values
all_value = []
all_header = []

#GET THE PE FILES
exe_path = "winrar-x64-550.exe"
try:
    pe = pefile.PE(exe_path)
    # This is also a valid function call
    # pe = pefile.PE(name=exe_path)
except OSError as e:
    print(e)
except pefile.PEFormatError as e:
    print("[-] PEFormatError: %s" % e.value)

#to extract all the dos_headers
dos_header = []
print("[*] Listing DOS_HEADER fields...")
for keys in pe.DOS_HEADER.__keys__:
	for field in keys:
		dos_header.append(field)
try:
    dos_header.remove("e_res")
except:
    print("not present boii")

try:
    dos_header.remove("e_res2")
except:
    print("not present boii")

all_header = dos_header

for header in dos_header:
    temp = "pe.DOS_HEADER."+header 
    value = eval(temp)
    all_value.append(value)

#to extract all the NT_HEADER
'''
nt_header = []
print("[*] Listing NT_HEADER fields...")
for keys in pe.NT_HEADERS.__keys__:
    for field in keys:
        nt_header.append(field)

for header in nt_header:
    temp = "pe.NT_HEADERS."+header
    print(header)
    value = eval(temp)
    all_value.append(value)
'''

#to extract all the FILE_HEADER
file_header = []
print("[*] Listing FILE_HEADER fields...")
for keys in pe.FILE_HEADER.__keys__:
    for field in keys:
        file_header.append(field)

all_header = all_header + file_header

for header in file_header:
    temp = "pe.FILE_HEADER."+header
    value = eval(temp)
    all_value.append(value)

#to extract all the OPTIONAL_HEADER
optional_header = []
print("[*] Listing OPTIONAL_HEADER fields...")
for keys in pe.OPTIONAL_HEADER.__keys__:
    for field in keys:
        optional_header.append(field)

try:
    optional_header.remove("BaseOfData")
except:
    print("not present boii")

try:
    optional_header.remove("Reserved1")
except:
    print("not present boii")

te = optional_header[17]
optional_header[17] = optional_header[18]
optional_header[18] = optional_header[19]
optional_header[19] = te

all_header = all_header + optional_header

for header in optional_header:
    temp = "pe.OPTIONAL_HEADER."+header
    value = eval(temp)
    all_value.append(value)


#to extract all the IMAGE_DIRECTORY_ENTRY_SECURITY
ides = []
check = 1
print("[*] Listing IMAGE_DIRECTORY_ENTRY_SECURITY fields...")
for data_directory in pe.OPTIONAL_HEADER.DATA_DIRECTORY:
    ides.append(data_directory)
    if(check == 5):
        break
    check =  check + 1

check = 1
for data_directory in pe.OPTIONAL_HEADER.DATA_DIRECTORY:
    all_header.append(data_directory.name)
    if(check == 5):
        break
    check = check + 1

for i in ides:
    value = i.VirtualAddress
    all_value.append(value)

#all the header
print("["+ str(len(all_header)) + "]")
#print(all_header, end="\n\n")

#all the values
print("["+ str(len(all_value)) + "]")
#print(all_value)
'''
for i in all_value:
    print(i)
'''
#checking with the file_headers
with open("attributes.txt", 'r') as read_att:
    k = 0
    for i in read_att:
        t = i.split()
        try:        
            if(t[0] != all_header[k]):
                print(t[0])
                continue
        except:
            print("all_done", k)
            break
        k = k + 1

#checking with the file_header_values
with open("winrar_data.txt",'r') as va:
    k = 0
    for i in va:
        t = i.split()
        try:        
            if(str(t[0]) != str(all_value[k])):
                print(t[0])
                continue
        except:
            print("all_done", k)
            break
        k = k + 1